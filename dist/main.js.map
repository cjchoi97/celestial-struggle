{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/projectile.js","webpack:///./src/player.js","webpack:///./src/background.js","webpack:///./src/controls.js","webpack:///./src/enemy.js","webpack:///./src/level.js","webpack:///./src/scripts/levels/level1.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Projectile","constructor","props","this","projectileImg","Image","src","img","x","y","width","height","dx","dy","ctx","draw","detectHit","type","hitbox","game","enemies","length","enemyHitBox","hitBox","console","log","removeEnemy","player","lives","playerProjectiles","pause","recenter","drawImage","Player","playerImg","onload","canvas","fireProjectile","moveHorizontally","speed","moveVertically","Background","canvasHeight","canvasWidth","stars","generateStars","count","push","Math","random","radius","brightness","color","getStarColor","colors","floor","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","star","beginPath","arc","PI","fill","drawNebula","grd","createRadialGradient","Controls","keyDownHandler","keyUpHandler","window","addEventListener","e","gameOnGoing","document","getElementById","style","display","start","reset","clearInterval","keydown","Enemy","time","enemyImg","id","selfTimer","detectCollision","projectiles","left","right","bottom","top","eLeft","eRight","eBottom","map","projectile","Level","level1","enemy","Game","background","enemyProjectiles","setupControls","levels","levelidx","startTime","stunTime","gameFinished","setupLevel","lengthl","enemiesLeft","renderBackground","addProjectile","newTime","newPlayerShot","addEnemyProjectile","newEnemyShot","gameOver","startStun","timestamp","clearRect","animationLoop","requestAnimationFrame","cancelAnimationFrame","getContext"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { game } from \"./index\";\r\n\r\nclass Projectile {\r\n  constructor(props) {\r\n    this.projectileImg = new Image();\r\n    this.projectileImg.src = props.img;\r\n    this.x = props.x;\r\n    this.y = props.y;\r\n    this.width = 10;\r\n    this.height = 20;\r\n    this.dx = 0;\r\n    this.dy = props.dy; // speed of projectile\r\n    this.ctx = props.ctx;\r\n    this.draw = this.draw.bind(this);\r\n    this.detectHit = this.detectHit.bind(this);\r\n    this.type = props.type;\r\n  }\r\n\r\n  detectHit() {\r\n    this.hitbox = [this.x, this.x + this.width, this.y + this.height, this.y];\r\n\r\n    if (this.type === \"player\") {\r\n      // console.log(\"player\");\r\n      if (game.enemies) {\r\n        for (let i = 0; i < game.enemies.length; i++) {\r\n          if (game.enemies[i]) {\r\n            const enemyHitBox = game.enemies[i].hitBox();\r\n            if (\r\n              this.y < enemyHitBox[2] &&\r\n              this.x >= enemyHitBox[0] &&\r\n              this.hitbox[1] <= enemyHitBox[1] &&\r\n              !(this.hitbox[2] < enemyHitBox[3])\r\n            ) {\r\n              console.log(\"enemy hit by player bullet\");\r\n              // clearInterval(game.enemyShot);\r\n              game.removeEnemy(i);\r\n              // this.y = 551;\r\n              delete this;\r\n              //increment score\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (this.type === \"enemy\") {\r\n      if (game.player) {\r\n        const enemyHitBox = game.player.hitBox();\r\n        if (\r\n          this.hitbox[2] > enemyHitBox[3] &&\r\n          this.hitbox[0] >= enemyHitBox[0] &&\r\n          this.hitbox[1] <= enemyHitBox[1] &&\r\n          !(this.hitbox[3] > enemyHitBox[2])\r\n        ) {\r\n          // clearInterval(game.playerShot);\r\n          game.player.lives--;\r\n          // game.player.x = this.ctx.canvas.width / 2.2;\r\n          // game.player.y = this.ctx.canvas.height - 50;\r\n          if (game.player.lives === 0) {\r\n            console.log(\"WE HAVE LOST\")\r\n            game.playerProjectiles = [];\r\n            game.pause();\r\n          }\r\n          game.player.recenter();\r\n          delete this;\r\n          console.log(\"player hit by enemy bullet\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  draw() {\r\n    this.y += this.dy;\r\n    this.ctx.drawImage(\r\n      this.projectileImg,\r\n      this.x,\r\n      this.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n    this.detectHit();\r\n    // setTimeout(() => requestAnimationFrame(this.draw), 1000/20);\r\n    // console.log(\"fire\");\r\n    if (this.y > 550) return;\r\n    // requestAnimationFrame(this.draw);\r\n  }\r\n}\r\n\r\nexport default Projectile;\r\n","import Projectile from \"./projectile\";\r\n\r\nclass Player {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.playerImg = new Image();\r\n    this.playerImg.src = \"./src/assets/spaceship.png\";\r\n    this.height = 50;\r\n    this.width = 50;\r\n    this.playerImg.onload = () => this.draw();\r\n    this.x = this.ctx.canvas.width / 2.2;\r\n    this.y = this.ctx.canvas.height - 50;\r\n    this.draw = this.draw.bind(this);\r\n    this.dx = 0;\r\n    this.dy = 0;\r\n\r\n\r\n    this.lives = 3;\r\n\r\n    this.fireProjectile = this.fireProjectile.bind(this);\r\n  }\r\n\r\n  recenter() {\r\n    this.x = this.ctx.canvas.width / 2.2;\r\n    this.y = this.ctx.canvas.height - 50;\r\n  }\r\n\r\n  hitBox() {\r\n    return [this.x, this.x + this.width, this.y + this.height, this.y];\r\n  }\r\n\r\n  moveHorizontally(speed) {\r\n    // console.log(this.x);\r\n    this.dx = speed;\r\n  }\r\n\r\n  moveVertically(speed) {\r\n    this.dy = speed;\r\n  }\r\n\r\n  fireProjectile() {\r\n    const projectile = new Projectile({\r\n      x: this.x + 21,\r\n      y: this.y,\r\n      dy: -5,\r\n      ctx: this.ctx,\r\n      img: \"./src/assets/basic-projectile.png\",\r\n      type: \"player\",\r\n    });\r\n    // console.log(\"MADE PROJECTILE\")\r\n\r\n    // projectile.draw();\r\n    return projectile;\r\n  }\r\n\r\n  draw() {\r\n    // debugger\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n    // this.fireProjectile();\r\n    this.ctx.drawImage(this.playerImg, this.x, this.y, this.width, this.height);\r\n    // requestAnimationFrame(this.draw);\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","// class Background {\r\n//   constructor(ctx) {\r\n//     this.ctx = ctx;\r\n//     this.backgroundImg = new Image();\r\n//     this.backgroundImg.src = './src/assets/space-background.png';\r\n//     this.canvasHeight = ctx.canvas.height;\r\n//     this.canvasWidth = ctx.canvas.width;\r\n//     this.y = 0;\r\n\r\n//     this.draw = this.draw.bind(this);\r\n//   }\r\n\r\n//   draw() {\r\n//     // debugger\r\n//     this.y += 0.5;\r\n//     this.ctx.drawImage(this.backgroundImg, 0, this.y);\r\n//     this.ctx.drawImage(this.backgroundImg, 0, this.y - this.canvasHeight);\r\n//     if (this.y === this.canvasHeight) this.y = 0;\r\n//     // requestAnimationFrame(this.draw); \r\n//   }\r\n// }\r\n\r\n// export default Background;\r\n\r\nclass Background {\r\n  constructor(ctx) {\r\n    this.ctx = ctx;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.stars = [];\r\n    this.generateStars(150); // Create 150 stars\r\n    \r\n    this.draw = this.draw.bind(this);\r\n  }\r\n  \r\n  generateStars(count) {\r\n    for (let i = 0; i < count; i++) {\r\n      this.stars.push({\r\n        x: Math.random() * this.canvasWidth,\r\n        y: Math.random() * this.canvasHeight,\r\n        radius: Math.random() * 1.5 + 0.5, // Star size between 0.5 and 2\r\n        speed: Math.random() * 0.3 + 0.1,  // Star speed\r\n        brightness: Math.random() * 0.8 + 0.2, // Star brightness\r\n        color: this.getStarColor()\r\n      });\r\n    }\r\n  }\r\n  \r\n  getStarColor() {\r\n    // Creates white, blue-ish, or yellow-ish stars\r\n    const colors = [\r\n      'rgba(255, 255, 255, 0.8)',  // White\r\n      'rgba(210, 230, 255, 0.8)',  // Blue-ish\r\n      'rgba(255, 255, 210, 0.8)'   // Yellow-ish\r\n    ];\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  }\r\n\r\n  draw() {\r\n    // Draw a dark blue/black gradient background\r\n    const gradient = this.ctx.createLinearGradient(0, 0, 0, this.canvasHeight);\r\n    gradient.addColorStop(0, '#000033');\r\n    gradient.addColorStop(1, '#000015');\r\n    this.ctx.fillStyle = gradient;\r\n    this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n    \r\n    // Draw and update stars\r\n    for (let i = 0; i < this.stars.length; i++) {\r\n      const star = this.stars[i];\r\n      \r\n      // Draw the star\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\r\n      this.ctx.fillStyle = star.color;\r\n      this.ctx.fill();\r\n      \r\n      // Move the star down\r\n      star.y += star.speed;\r\n      \r\n      // If star goes off bottom of screen, reset to top\r\n      if (star.y > this.canvasHeight) {\r\n        star.y = 0;\r\n        star.x = Math.random() * this.canvasWidth;\r\n      }\r\n    }\r\n    \r\n    // Add optional distant nebulae\r\n    this.drawNebula(100, 150, 200, 'rgba(70, 50, 120, 0.1)'); // Purple nebula\r\n    this.drawNebula(400, 300, 250, 'rgba(50, 100, 120, 0.1)'); // Blue nebula\r\n  }\r\n  \r\n  drawNebula(x, y, radius, color) {\r\n    const grd = this.ctx.createRadialGradient(x, y, 0, x, y, radius);\r\n    grd.addColorStop(0, color);\r\n    grd.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n    this.ctx.fillStyle = grd;\r\n    this.ctx.fillRect(x - radius, y - radius, radius * 2, radius * 2);\r\n  }\r\n}\r\n\r\nexport default Background;","import { game } from \"./index\";\r\n\r\nclass Controls {\r\n  constructor(ctx) {\r\n    // debugger\r\n    this.ctx = ctx;\r\n    this.keyDownHandler = this.keyDownHandler.bind(this);\r\n    this.keyUpHandler = this.keyUpHandler.bind(this);\r\n    window.addEventListener(\"keydown\", this.keyDownHandler);\r\n    window.addEventListener(\"keyup\", this.keyUpHandler);\r\n    // this.keydown = null;\r\n  }\r\n\r\n  keyDownHandler(e) {\r\n    // console.log(this.keydown);\r\n    // console.log(\"pressed\");\r\n    // this.keydown = true;\r\n    if (game.player) {\r\n      if (e.key === \"d\") {\r\n        game.player.moveHorizontally(5);\r\n      } else if (e.key === \"a\") {\r\n        game.player.moveHorizontally(-5);\r\n      } else if (e.key === \"w\") {\r\n        game.player.moveVertically(-5);\r\n      } else if (e.key === \"s\") {\r\n        game.player.moveVertically(5);\r\n      } else if (e.key === \"p\" && game.gameOnGoing === false) {\r\n        document.getElementById(\"modal\").style.display = \"none\";\r\n        game.start();\r\n      } else if (e.key === \"r\") {\r\n        game.pause();\r\n        game.reset();\r\n        game.start();\r\n        document.getElementById(\"end-modal\").style.display = \"none\";\r\n      }\r\n    }\r\n  }\r\n\r\n  keyUpHandler(e) {\r\n    clearInterval(this.keydown);\r\n    if (game.player) {\r\n      if (e.key == \"d\") {\r\n        game.player.moveHorizontally(0);\r\n      } else if (e.key == \"a\") {\r\n        game.player.moveHorizontally(0);\r\n      } else if (e.key === \"w\") {\r\n        game.player.moveVertically(0);\r\n      } else if (e.key === \"s\") {\r\n        game.player.moveVertically(0);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import Projectile from \"./projectile\";\r\nimport { game } from \"./index\";\r\n\r\nclass Enemy {\r\n  constructor(ctx, props) {\r\n    this.ctx = ctx;\r\n    this.time = 0;\r\n    this.enemyImg = new Image();\r\n    this.enemyImg.src = props.img;\r\n\r\n    this.id = props.id;\r\n    this.height = props.height;\r\n    this.width = props.width;\r\n    this.x = props.x;\r\n    this.y = props.y;\r\n    this.dy = props.dy; // speed of descent\r\n\r\n    this.enemyImg.onload = () => this.draw();\r\n    this.draw = this.draw.bind(this);\r\n    this.fireProjectile = this.fireProjectile.bind(this);\r\n    this.selfTimer = this.selfTimer.bind(this);\r\n    this.detectCollision = this.detectCollision.bind(this);\r\n\r\n    this.projectiles = [];\r\n\r\n    // if (this.y > 0 && this.y < 1) {\r\n    //   console.log(\"here\");\r\n    //   this.timerInterval = setInterval(this.selfTimer, 1000/1);\r\n    // } \r\n  }\r\n\r\n  selfTimer() {\r\n    this.time++;\r\n  }\r\n\r\n  hitBox() {\r\n    return [this.x, this.x + this.width, this.y + this.height, this.y];\r\n  }\r\n \r\n  detectCollision() {\r\n    //              left 0       right  1               bottom  2      top 3\r\n    // this.hitbox = [this.x, this.x + this.width, this.y + this.height, this.y];\r\n    const left = this.x;\r\n    const right = this.x + this.width;\r\n    const bottom = this.y + this.height;\r\n    const top = this.y;\r\n\r\n    const enemyHitBox = game.player.hitBox();\r\n    const eLeft = enemyHitBox[0];\r\n    const eRight = enemyHitBox[1];\r\n    const eBottom = enemyHitBox[2];\r\n    const eTop = enemyHitBox[3];\r\n\r\n    if ( \r\n      (bottom > eTop && \r\n        ((eLeft > left && eLeft < right) || (eRight < right && eRight > left))\r\n      ) &&\r\n      (top < eBottom &&\r\n        ((eLeft > left && eLeft < right) || (eRight < right && eRight > left))\r\n      )\r\n    ) {\r\n      // clearInterval(game.playerShot);\r\n      // clearInterval(this.firingRate);\r\n      // clearInterval(game.enemyShot);\r\n\r\n      console.log(\"player and enemy collide\");\r\n\r\n      game.removeEnemy(this.id);\r\n      game.player.lives--;\r\n      if (game.player.lives === 0) {\r\n        game.pause()\r\n      }\r\n      game.player.recenter();\r\n      /* kill player too */\r\n    }\r\n  }\r\n\r\n  fireProjectile() {\r\n    // debugger\r\n    const projectile = new Projectile({\r\n      x: this.x + 30,\r\n      y: this.y + 70,\r\n      dy: 2,\r\n      ctx: this.ctx,\r\n      img: './src/assets/enemy-projectile.png',\r\n      type: \"enemy\"\r\n    })\r\n    // this.projectile.draw();  \r\n    // console.log(\"we are here\");\r\n\r\n    return projectile;\r\n  }\r\n  \r\n  draw() {\r\n    this.y += this.dy;\r\n    // this.startTime = this.startTime || timestamp;\r\n    // const seconds = ((timestamp - this.startTime) / 1000).toFixed(2);\r\n    // this.time += .01;\r\n    // console.log(this.time);\r\n    \r\n    // if (seconds % 1.00 === 0) {\r\n    //   // this.time += 1;\r\n    //   console.log(\"this.time\");\r\n    // }\r\n    this.ctx.drawImage(this.enemyImg, this.x, this.y, this.width, this.height);\r\n\r\n    this.projectiles.map((projectile) => projectile.draw());\r\n\r\n    this.detectCollision();\r\n    // if (this.y > 0 && this.y < 1) {\r\n    //   // this.time = 0;\r\n    //   this.firingRate = setInterval(this.fireProjectile, 2000 / 1);\r\n    // }\r\n    // if (this.y > 0 && this.time % 1.00 === 0) {\r\n    //   // this.fireProjectile();\r\n    //   // this.time = 0;\r\n    // }\r\n    if (this.y > 550) {\r\n      // clearInterval(this.firingRate);\r\n      // delete this.projectile;\r\n      game.removeEnemy(this.id)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Enemy;","import { game } from './index';\r\n\r\nclass Level {\r\n  constructor(enemies) {\r\n    this.enemies = enemies\r\n  }\r\n}\r\n\r\nexport default Level;","import Level from '../../level';\r\nimport Enemy from '../../enemy';\r\n\r\nfunction level1(ctx) {\r\n  const enemies = [];\r\n  const width = ctx.canvas.width;\r\n  const height = -100;\r\n\r\n  const generateHorizontal = () => {\r\n    return Math.floor(Math.random() * Math.floor(width - 70));\r\n  }\r\n\r\n  const generateVertical = () => {\r\n    return Math.random() * ((height-3000) - height) + height;\r\n  }\r\n\r\n  for (let i = 0; i < 100; i++) {\r\n    const enemy = new Enemy(ctx, {\r\n      img: \"./src/assets/enemy-ship.png\",\r\n      height: 70,\r\n      width: 70,\r\n      x: generateHorizontal(),\r\n      y: generateVertical(),\r\n      dy: 1,\r\n      id: i\r\n    });\r\n\r\n    enemies.push(enemy);\r\n  }\r\n\r\n  return new Level(enemies);\r\n}\r\n\r\nexport default level1;","import Player from \"./player\";\r\nimport Background from \"./background\";\r\nimport Controls from \"./controls\";\r\nimport Enemy from \"./enemy\";\r\nimport level1 from \"./scripts/levels/level1\";\r\nimport { game } from \".\";\r\n\r\nclass Game {\r\n  constructor(canvas, ctx) {\r\n    this.canvas = canvas;\r\n    this.ctx = ctx;\r\n    this.background = new Background(this.ctx);\r\n    // this.player = null;\r\n    this.player = new Player(this.ctx);\r\n    // this.enemy = new Enemy(this.ctx);\r\n    this.playerProjectiles = [];\r\n    this.enemyProjectiles = [];\r\n    this.draw = this.draw.bind(this);\r\n\r\n    this.setupControls();\r\n\r\n    this.levels = [level1];\r\n    this.levelidx = 0;\r\n    this.startTime = 0;\r\n    this.stunTime = 0;\r\n    this.gameOnGoing = false;\r\n    this.gameFinished = false;\r\n    this.setupLevel();\r\n  }\r\n\r\n  reset() {\r\n    this.background = new Background(this.ctx);\r\n    // this.player = null;\r\n    this.player = new Player(this.ctx);\r\n    // this.enemy = new Enemy(this.ctx);\r\n    this.playerProjectiles = [];\r\n    this.draw = this.draw.bind(this);\r\n\r\n    this.setupControls();\r\n\r\n    for (let i = 0; i < this.enemies.lengthl; i++) {\r\n      delete this.enemies[i];\r\n    }\r\n\r\n    this.enemies = [];\r\n    this.levels = [level1];\r\n    this.levelidx = 0;\r\n    this.startTime = 0;\r\n    this.gameOnGoing = false;\r\n    this.setupLevel();\r\n\r\n  }\r\n\r\n  enemiesLeft() {\r\n    for (let i = 0; i < this.enemies.length; i++) {\r\n      if (this.enemies[i]) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  removeEnemy(id) {\r\n    for (let i = 0; i < this.enemies.length; i++) {\r\n      if (this.enemies[i]) {\r\n        if (this.enemies[i].id === id) {\r\n          // clearInterval(this.enemies[i].firingRate);\r\n          this.enemies[i].projectiles = [];\r\n          delete this.enemies[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setupLevel() {\r\n    this.enemies = this.levels[this.levelidx](this.ctx).enemies;\r\n    this.levelidx++;\r\n  }\r\n\r\n  renderBackground() {\r\n    this.background.draw();\r\n  }\r\n\r\n  setupControls() {\r\n    new Controls(this.ctx);\r\n  }\r\n\r\n  addProjectile(newTime) {\r\n    const newPlayerShot = this.player.fireProjectile();\r\n    this.playerProjectiles.push(newPlayerShot);\r\n    return newTime;\r\n  }\r\n\r\n  addEnemyProjectile(newTime, i) {\r\n    const newEnemyShot = this.enemies[i].fireProjectile();\r\n    this.enemies[i].projectiles.push(newEnemyShot);\r\n    // this.enemyProjectiles.push(newEnemyShot);\r\n    return newTime;\r\n  }\r\n  \r\n  gameOver() {\r\n    document.getElementById(\"end-modal\").style.display = \"block\";\r\n    console.log(\"We here\");\r\n  }\r\n\r\n  startStun() {\r\n    this.stunTime = 10;\r\n  }\r\n  \r\n  draw(timestamp) {\r\n\r\n    //====== Player firing Rate ======//\r\n    this.startTime =\r\n      (timestamp - this.startTime > 300) //every 300 miliseconds\r\n        ? this.addProjectile(timestamp)\r\n        : this.startTime;\r\n\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.renderBackground();\r\n    // if (!this.stunTime) {\r\n      this.player.draw(); //draw the player on every frame\r\n    // } else if (timestamp - this.startTime < 100) {\r\n    //   this.stunTime--;\r\n    //   console.log(\"INVISIBLE\");\r\n    //   if (this.stunTime <= 0) {\r\n    //     this.player.recenter();\r\n    //     this.stunTime = 0;\r\n    //   }\r\n    // }\r\n\r\n    //====== Drawing Enemies ======//\r\n    for (let i = 0; i < this.enemies.length; i++) {\r\n      if (this.enemies[i]) {\r\n        this.enemies[i].draw(timestamp);\r\n        \r\n        // this.enemies[i].projectiles.map((projectile) => projectile.draw());\r\n        if (this.enemies[i] && this.enemies[i].y > 0 ) {\r\n          //====== Enemy Projectiles ======//\r\n          this.enemies[i].time = \r\n            timestamp - this.enemies[i].time > 3000 //every 3 seconds\r\n            ? this.addEnemyProjectile(timestamp, i) \r\n            : this.enemies[i].time;\r\n        }\r\n      }\r\n    }\r\n\r\n    //====== Drawing Projectiles ======//\r\n    this.playerProjectiles.map((projectile) => projectile.draw());\r\n    // this.enemyProjectiles.map((projectile) => projectile.draw());\r\n\r\n    //====== Checking for remaining enemies ======//\r\n    if (!this.enemiesLeft()) {\r\n      this.gameOnGoing = false;\r\n      this.gameOver();\r\n      return;\r\n    }\r\n\r\n    this.animationLoop = requestAnimationFrame(this.draw);\r\n  }\r\n\r\n  start() {\r\n    this.gameOnGoing = true;\r\n    this.animationLoop = requestAnimationFrame(this.draw);\r\n\r\n    // if (!this.enemiesLeft()) {\r\n\r\n    //   console.log(\"Game Over\");\r\n    //   return;\r\n    //   // this.enemies.forEach(enemy => {\r\n    //     // console.log(enemy.y);\r\n    //     // if (enemy.y === 0) {\r\n    //       // this.enemyShot = setInterval(enemy.fireProjectile, 1000/1);\r\n    //     // }\r\n    //   // })\r\n    // }\r\n    // setInterval(this.draw(), 10);\r\n  }\r\n\r\n  pause() {\r\n\r\n    if (this.animationLoop) {\r\n      console.log(\"GAME SHOULD PAUSE\")\r\n      cancelAnimationFrame(this.animationLoop);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Game;\r\n","import \"./styles/index.scss\";\r\nimport Game from \"./game\";\r\nimport Controls from \"./controls\";\r\n\r\nexport let game = null;\r\n// new Controls();\r\n// setupControls();\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const canvas = document.getElementById(\"canvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n  // ctx.beginPath();\r\n  // ctx.rect(160, 10, 100, 40);\r\n  // ctx.strokeStyle = \"rgba(0, 0, 255, 0.5)\";\r\n  // ctx.stroke();\r\n  // ctx.closePath();\r\n\r\n  game = new Game(canvas, ctx);\r\n\r\n  // if (!game.gameOnGoing) {\r\n  //   document.getElementById(\"modal\").style.display = \"block\";\r\n  // }\r\n  window.game = game;\r\n});\r\n"],"sourceRoot":""}